name: FullStack CI/CD

on:
  push:
    branches:
      - feature**
      - fix**
  pull_request:
    branches:
      - dev
      - master
jobs:
  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        working-directory: ./frontend
        run: bun install

      - name: Run lint
        working-directory: ./frontend
        run: bun run lint
      - name: Run test
        working-directory: ./frontend
        run: bun test
  backend-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: /secrets/mysql_root_password
          MYSQL_DATABASE: /secrets/mysql_test_database
          MYSQL_USER: /secrets/mysql_user
          MYSQL_PASSWORD: /secrets/mysql_password
        ports:
          - 3308:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install dependencies
        working-directory: ./backend
        run: composer install

      - name: Copy .env
        working-directory: ./backend
        run: cp .env.example .env

      - name: Update .env for GitHub Actions
        working-directory: ./backend
        run: |
          echo "DB_CONNECTION=mysql_testing" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3308" >> .env
          echo "DB_DATABASE=/secrets/mysql_test_database" >> .env
          echo "DB_USERNAME=/secrets/mysql_user" >> .env
          echo "DB_PASSWORD=/secrets/mysql_password" >> .env
      - name: Install dockerize
        run: |
          curl -sSL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | sudo tar -C /usr/local/bin -xzv

      - name: Wait for MySQL
        run: |
          dockerize -wait tcp://127.0.0.1:3306 -timeout 1m

      - name: Generate APP_KEY
        working-directory: ./backend
        run: php artisan key:generate

      - name: Run migrations
        working-directory: ./backend
        run: php artisan migrate --force

      - name: Run tests
        working-directory: ./backend
        run: |
          php artisan test
  create-pull-request:
    if: github.event_name == 'push'
    needs: [backend-test, frontend-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check and Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.ACTION_TOKEN }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          if [ "$CURRENT_BRANCH" != "dev" ]; then
            gh pr create \
              --base dev \
              --head $CURRENT_BRANCH \
              --title "$COMMIT_MESSAGE" \
              --body "This PR is automatically created by GitHub Actions"
          else
            echo "No changes to create a PR for."
          fi

